///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        05/Nov/2019  15:27:21 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\Source\Sensor.c             /
//    Command line       =  -f D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Z /
//                          igbee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\ /
//                          zstack\Samples\SensorApp\CC2530DB\..\..\..\Tools\ /
//                          CC2530DB\f8wCoord.cfg (-DCPU32MHZ                 /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8     /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Z /
//                          igbee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\ /
//                          zstack\Samples\SensorApp\CC2530DB\..\..\..\Tools\ /
//                          CC2530DB\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0    /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00200000                     /
//                          -DZDAPP_CONFIG_PAN_ID=0x15 -DNWK_START_DELAY=100  /
//                          -DEXTENDED_JOINING_RANDOM_MASK=0x007F             /
//                          -DBEACON_REQUEST_DELAY=100                        /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä× /
//                          ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigbee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC /
//                          2530-eV1.3\Projects\zstack\Samples\SensorApp\Sour /
//                          ce\Sensor.c -D ZTOOL_P1 -D xMT_TASK -D            /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          xLCD_SUPPORTED=DEBUG -lC                          /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\CoordinatorEB\List /
//                          \ -lA D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅ /
//                          Ì\Zigbee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projec /
//                          ts\zstack\Samples\SensorApp\CC2530DB\CoordinatorE /
//                          B\List\ --diag_suppress Pe001,Pa010 -o            /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\CoordinatorEB\Obj\ /
//                           -e --no_code_motion --debug --core=plain         /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\ -I                /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\Source\ -I      /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\ZMain\TI2 /
//                          530DB\ -I D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-V /
//                          S¹âÅÌ\Zigbee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Pr /
//                          ojects\zstack\Samples\SensorApp\CC2530DB\..\..\.. /
//                          \..\..\Components\hal\include\ -I                 /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\hal\target\CC2530EB\ -I                   /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\mac\include\ -I                           /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\mac\high_level\ -I                        /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\mac\low_level\srf04\ -I                   /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\mac\low_level\srf04\single_chip\ -I       /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\mt\ -I D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT- /
//                          IOT-VS¹âÅÌ\Zigbee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1 /
//                          .3\Projects\zstack\Samples\SensorApp\CC2530DB\..\ /
//                          ..\..\..\..\Components\osal\include\ -I           /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\services\saddr\ -I                        /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\services\sdata\ -I                        /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\stack\af\ -I D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁ /
//                          Ï\CVT-IOT-VS¹âÅÌ\Zigbee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC25 /
//                          30-eV1.3\Projects\zstack\Samples\SensorApp\CC2530 /
//                          DB\..\..\..\..\..\Components\stack\nwk\ -I        /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\stack\sapi\ -I D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä× /
//                          ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigbee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC /
//                          2530-eV1.3\Projects\zstack\Samples\SensorApp\CC25 /
//                          30DB\..\..\..\..\..\Components\stack\sec\ -I      /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\stack\sys\ -I D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×Ê /
//                          ÁÏ\CVT-IOT-VS¹âÅÌ\Zigbee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2 /
//                          530-eV1.3\Projects\zstack\Samples\SensorApp\CC253 /
//                          0DB\..\..\..\..\..\Components\stack\zdo\ -I       /
//                          D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\..\..\..\..\..\Com /
//                          ponents\zmac\ -I D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CV /
//                          T-IOT-VS¹âÅÌ\Zigbee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-e /
//                          V1.3\Projects\zstack\Samples\SensorApp\CC2530DB\. /
//                          .\..\..\..\..\Components\zmac\f8w\ -Ohz           /
//                          --require_prototypes                              /
//    List file          =  D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigb /
//                          ee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zst /
//                          ack\Samples\SensorApp\CC2530DB\CoordinatorEB\List /
//                          \Sensor.s51                                       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Sensor

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?FLT_DIV
        EXTERN ?FLT_MUL
        EXTERN ?FLT_TO_L
        EXTERN ?L_MOV_X
        EXTERN ?S_SHL
        EXTERN ?UL_TO_FLT
        EXTERN ?V0

        PUBLIC ??ReadAdcValue?relay
        FUNCTION ??ReadAdcValue?relay,0203H
        PUBLIC ??ReadTemp?relay
        FUNCTION ??ReadTemp?relay,0203H
        PUBLIC ??Sensor_PIN_INT?relay
        FUNCTION ??Sensor_PIN_INT?relay,0203H
        PUBWEAK ADCCON1
        PUBWEAK ADCCON3
        PUBWEAK ADCH
        PUBWEAK ADCL
        PUBWEAK APCFG
        PUBWEAK IEN2
        PUBWEAK P1DIR
        PUBWEAK P1IEN
        PUBWEAK P1SEL
        PUBWEAK PICTL
        PUBLIC ReadAdcValue
        FUNCTION ReadAdcValue,0203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ReadTemp
        FUNCTION ReadTemp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC Sensor_PIN_INT
        FUNCTION Sensor_PIN_INT,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBWEAK __Constant_41c80000
        PUBWEAK __Constant_44b90000
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
ReadAdcValue        SYMBOL "ReadAdcValue"
??ReadAdcValue?relay SYMBOL "?relay", ReadAdcValue
ReadTemp            SYMBOL "ReadTemp"
??ReadTemp?relay    SYMBOL "?relay", ReadTemp
Sensor_PIN_INT      SYMBOL "Sensor_PIN_INT"
??Sensor_PIN_INT?relay SYMBOL "?relay", Sensor_PIN_INT

// D:\Îäºº´´Î¬ÌØÎïÁªÍøÊµÑéÏä×ÊÁÏ\CVT-IOT-VS¹âÅÌ\Zigbee²¿·Ö£¨ÎïÁªÍø£©\ZStack-CC2530-eV1.3\Projects\zstack\Samples\SensorApp\Source\Sensor.c
//    1 #include "Sensor.h"
//    2 #include "iocc2530.h"

        ASEGN SFR_AN:DATA:NOROOT,08cH
// unsigned char volatile __sfr PICTL
PICTL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,08dH
// unsigned char volatile __sfr P1IEN
P1IEN:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,09aH
// unsigned char volatile __sfr IEN2
IEN2:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b4H
// unsigned char volatile __sfr ADCCON1
ADCCON1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b6H
// unsigned char volatile __sfr ADCCON3
ADCCON3:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0baH
// unsigned char volatile __sfr ADCL
ADCL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0bbH
// unsigned char volatile __sfr ADCH
ADCH:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f2H
// unsigned char volatile __sfr APCFG
APCFG:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f4H
// unsigned char volatile __sfr P1SEL
P1SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0feH
// unsigned char volatile __sfr P1DIR
P1DIR:
        DATA8
        DS 1
//    3 #include "hal_board.h"
//    4 #include "hal_defs.h"
//    5 #include "hal_mcu.h"
//    6 #include "hal_types.h"
//    7 #include "hal_adc.h"
//    8 
//    9 /*****************************************************************************
//   10  º¯ÊıÉùÃ÷
//   11 *****************************************************************************/
//   12 void Sensor_PIN_INT(void);
//   13 uint16 ReadAdcValue(uint8 ChannelNum,uint8 DecimationRate,uint8 RefVoltage);
//   14 uint8 ReadTemp(void);
//   15 
//   16 /*****************************************************************************
//   17 º¯Êı¹¦ÄÜ:¶Á³öAD¿ÚµÄÊı¾İ
//   18 ÊäÈë²ÎÊı:ChannelNum:²É¼¯µÄÍ¨µÀºÅ  0-0xF
//   19                     1000: AIN0¨CAIN1
//   20                     1001: AIN2¨CAIN3
//   21                     1010: AIN4¨CAIN5
//   22                     1011: AIN6¨CAIN7
//   23                     1100: GND
//   24                     1101: Reserved
//   25                     1110: Temperature sensor
//   26                     1111: VDD/3
//   27          DecimationRate:·Ö±çÂÊ  00: 64 decimation rate (7 bits ENOB)
//   28                     01: 128 decimation rate (9 bits ENOB)
//   29                     10: 256 decimation rate (10 bits ENOB)
//   30                     11: 512 decimation rate (12 bits ENOB)
//   31 RefVoltage:²Î¿¼µçÑ¹:00: Internal reference
//   32                     01: External reference on AIN7 pin
//   33                     10: AVDD5 pin
//   34                     11: External reference on AIN6¨CAIN7 differential input
//   35 ·µ»ØÖµ:16bitµÄ²É¼¯Êı¾İ
//   36 */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   37 uint16 ReadAdcValue(uint8 ChannelNum,uint8 DecimationRate,uint8 RefVoltage)
ReadAdcValue:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function ReadAdcValue
        CODE
//   38 { 
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
//   39   uint16 AdValue;
//   40   if(ChannelNum == 0xe){//Æ¬ÄÚÎÂ¶Èµ½ADC_SOC
        MOV     A,#0xe
        XRL     A,R1
        MOV     DPTR,#0x624b
        JNZ     ??ReadAdcValue_0
//   41     TR0 = 1;
        MOV     A,#0x1
        SJMP    ??ReadAdcValue_1
//   42     ATEST = 1;
//   43   }
//   44   else{
//   45     TR0 = 0;
??ReadAdcValue_0:
        CLR     A
??ReadAdcValue_1:
        MOVX    @DPTR,A
//   46     ATEST = 0;
        MOV     DPTR,#0x61bd
        MOVX    @DPTR,A
//   47   } 
//   48   ADCCON3 = ChannelNum&0xf;
        MOV     A,#0xf
        ANL     A,R1
        MOV     0xb6,A
//   49   ADCCON3 = ADCCON3 | ((DecimationRate&0x3)<<4);
        MOV     A,#0x3
        ANL     A,R4
        SWAP    A
        ORL     0xb6,A
//   50   ADCCON3 = ADCCON3 | ((RefVoltage&0x3)<<6);   
        MOV     A,R5
        SWAP    A
        RLC     A
        RLC     A
        ANL     A,#0xc0
        ORL     0xb6,A
//   51   ADCCON1 = ADCCON1 | (0x3<<4);//ADCCON1.ST = 1Ê±Æô¶¯
        ORL     0xb4,#0x30
//   52   AdValue = ADCL; //Çå³ıEOC 
        MOV     A,0xba
//   53   AdValue = ADCH; 
        MOV     A,0xbb
//   54   ADCCON1 = ADCCON1 | (0x1<<6);//Æô¶¯×ª»»
        ORL     0xb4,#0x40
//   55   while(!(ADCCON1&0x80));
??ReadAdcValue_2:
        MOV     A,0xb4
        MOV     C,0xE0 /* A   */.7
        JNC     ??ReadAdcValue_2
//   56   AdValue = ADCH;
        MOV     A,0xbb
        MOV     ?V0 + 0,A
//   57   AdValue = (AdValue<<6) + (ADCL>>2);
        MOV     A,0xba
        MOV     R2,A
//   58   ADCCON1 =  ADCCON1 & 0x7f;
        ANL     0xb4,#0x7f
//   59   return AdValue;
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x6
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,R2
        RRC     A
        RRC     A
        ANL     A,#0x3f
        MOV     R2,A
        MOV     A,?V0 + 0
        ADD     A,R2
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
        REQUIRE ADCCON3
        REQUIRE ADCCON1
        REQUIRE ADCL
        REQUIRE ADCH
//   60 }
//   61 
//   62 /*****************************************************************************
//   63   void Sensor_PIN_INT(void)
//   64   ´«¸ĞÆ÷¼°ADC I/O¿Ú³õÊ¼»¯.
//   65 *****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   66 void Sensor_PIN_INT(void)
Sensor_PIN_INT:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function Sensor_PIN_INT
        CODE
//   67 {
        ; Saved register size: 0
        ; Auto size: 0
//   68   APCFG = (0x1<1)|(0x1<<4)|(0x1<<6);//P01,P04,P06ÎªADC¿Ú 
        MOV     0xf2,#0x50
//   69   //ÓÃÓÚÎÂÊª¶È²âÁ¿
//   70   P1SEL &= ~((1<<6)|(1<<7));//P16,P17ÎªGPIO        
        ANL     0xf4,#0x3f
//   71   P1DIR |= (1<<6)|(1<<7);//P16,P17ÎªOUTPUT    
        ORL     0xfe,#0xc0
//   72 
//   73   P1SEL |= (1<<3);//P13ÎªÍâÉè¹¦ÄÜ       
        ORL     0xf4,#0x8
//   74   PICTL &= ~(1<<1); //P10~P13ÉÏÉıÑØ´¥·¢
        ANL     0x8c,#0xfd
//   75   P1IEN |= (1<<3);//P13ÖĞ¶ÏÊ¹ÄÜ
        ORL     0x8d,#0x8
//   76   IEN2 |= (1<<4);//P1¿ÚÖĞ¶ÏÊ¹ÄÜ
        ORL     0x9a,#0x10
//   77 
//   78 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock1
        REQUIRE APCFG
        REQUIRE P1SEL
        REQUIRE P1DIR
        REQUIRE PICTL
        REQUIRE P1IEN
        REQUIRE IEN2
//   79 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   80 uint8 ReadTemp(void)
ReadTemp:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function ReadTemp
        CODE
//   81 {
        FUNCALL ReadTemp, ReadAdcValue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
//   82     uint8 temp;
//   83     uint16 AdValue;
//   84     float RHTValue;
//   85 
//   86     //Sensor_PIN_INT();
//   87     AdValue = ReadAdcValue(0xe,3,2);
//   88     RHTValue = AdValue;
//   89     RHTValue = RHTValue /1480 * 25;    //Ö÷°åÎÂ¶È
//   90     temp = (uint8)RHTValue;
//   91     
//   92     return temp;
        ; Setup parameters for call to function ReadAdcValue
        MOV     R3,#0x2
        MOV     R2,#0x3
        MOV     R1,#0xe
        LCALL   ??ReadAdcValue?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 0
        LCALL   ?UL_TO_FLT
        MOV     DPTR,#__Constant_44b90000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     DPTR,#__Constant_41c80000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     R1,?V0 + 0
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
//   93 }

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_44b90000:
        DD 44B90000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_41c80000:
        DD 41C80000H

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ReadAdcValue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ReadAdcValue

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Sensor_PIN_INT?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Sensor_PIN_INT

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ReadTemp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ReadTemp

        END
// 
// 196 bytes in segment BANKED_CODE
//  18 bytes in segment BANK_RELAYS
//  10 bytes in segment SFR_AN
//   8 bytes in segment XDATA_ROM_C
// 
// 214 bytes of CODE  memory
//   0 bytes of CONST memory (+  8 bytes shared)
//   0 bytes of DATA  memory (+ 10 bytes shared)
//
//Errors: none
//Warnings: none
